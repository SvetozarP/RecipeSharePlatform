# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Django backend to Azure Web App

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/main_recipe-api-dev98298.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements/base.txt
          pip install -r requirements/testing.txt
        
      - name: Run Django tests
        run: |
          cd backend
          pytest
        env:
          DJANGO_SETTINGS_MODULE: config.settings.testing
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Check migrations
        run: |
          cd backend
          python manage.py makemigrations --check --dry-run
          python manage.py migrate --plan
        env:
          DJANGO_SETTINGS_MODULE: config.settings.testing
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Collect static files
        run: |
          cd backend
          python manage.py collectstatic --noinput
        env:
          DJANGO_SETTINGS_MODULE: config.settings.testing
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Create deployment package
        run: |
          cd backend
          # Create startup script
          cat > startup.sh << 'EOL'
          #!/bin/sh
          SITE_DIR=$(dirname $(dirname $(find /tmp -name "antenv" -type d)))
          cd $SITE_DIR
          mkdir -p /home/site/wwwroot
          cp -r * /home/site/wwwroot/
          cd /home/site/wwwroot
          python -m venv antenv
          . antenv/bin/activate
          pip install --no-cache-dir -r requirements.txt
          python manage.py migrate --noinput
          gunicorn --chdir /home/site/wwwroot config.wsgi:application --bind=0.0.0.0:8000
          EOL
          chmod +x startup.sh
          
          # Create deployment package
          zip -r ../release.zip ./* startup.sh

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A192B6B3D6974208845C7450A636618B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DAC3758E440A4723ABBA182D2DFDFD7D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_2491E9699F3E4FE4ACDA072B4021A3E6 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'recipe-api-dev98298'
          slot-name: 'Production'
          package: release.zip
          startup-command: |
            export DJANGO_SETTINGS_MODULE="config.settings.production" && \
            export DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" && \
            export JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" && \
            export DB_NAME="${{ secrets.DB_NAME }}" && \
            export DB_USER="${{ secrets.DB_USER }}" && \
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}" && \
            export DB_HOST="${{ secrets.DB_HOST }}" && \
            export DB_PORT="${{ secrets.DB_PORT }}" && \
            export EMAIL_HOST="${{ secrets.EMAIL_HOST || 'smtp.gmail.com' }}" && \
            export EMAIL_PORT="${{ secrets.EMAIL_PORT || '587' }}" && \
            export EMAIL_USE_TLS="${{ secrets.EMAIL_USE_TLS || 'True' }}" && \
            export EMAIL_HOST_USER="${{ secrets.EMAIL_HOST_USER || '' }}" && \
            export EMAIL_HOST_PASSWORD="${{ secrets.EMAIL_HOST_PASSWORD || '' }}" && \
            export FRONTEND_URL="${{ secrets.FRONTEND_URL || 'https://recipe-sharing.azurewebsites.net' }}" && \
            SITE_DIR=$(dirname $(dirname $(find /tmp -name "antenv" -type d))) && \
            cd $SITE_DIR && \
            ls -la && \
            chmod +x startup.sh && \
            ./startup.sh
          