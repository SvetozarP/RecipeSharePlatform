name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var="resource_group_name=recipe-platform-rg" \
                      -var="environment=prod" \
                      -var="db_admin_username=${{ secrets.DB_ADMIN_USERNAME }}" \
                      -var="db_admin_password=${{ secrets.DB_ADMIN_PASSWORD }}"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform
        terraform apply -auto-approve \
                       -var="resource_group_name=recipe-platform-rg" \
                       -var="environment=prod" \
                       -var="db_admin_username=${{ secrets.DB_ADMIN_USERNAME }}" \
                       -var="db_admin_password=${{ secrets.DB_ADMIN_PASSWORD }}"

  backend:
    name: 'Backend CI/CD'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run Tests
      run: |
        cd backend
        python manage.py test

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'recipe-api-prod'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: backend

  frontend:
    name: 'Frontend CI/CD'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build
      run: |
        cd frontend
        npm run build

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        output_location: "dist" 